<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="securityGradRealm" class="com.allcam.framework.security.SecurityGradRealm"/> 

	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" p:cacheManagerConfigFile="classpath:spring/security/ehcache.xml" />
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 缓存 -->
	<bean id="cacheSessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" />
	<!-- 内存 -->
	<bean id="memorySessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 默认是 MemorySessionDAO -->
		<property name="sessionDAO" ref="cacheSessionDAO" />
		<property name="globalSessionTimeout" value="180000" />
		<property name="deleteInvalidSessions" value="true" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- sessionMode 值为：native 或者 http ，默认是http -->
		<!-- 现在设置 native 有问题：登录是正常的，但是登录后一刷新就跳会登录页面了。 -->
		<!-- <property name="sessionMode" value="native" /> -->
		<property name="realm" ref="securityGradRealm" />
		<!-- <property name="sessionManager" ref="sessionManager" /> -->
		<property name="cacheManager" ref="cacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	 <!-- 内网管理用户的Filter，专门的登录界面 -->   
	<bean id="managerAuthenticationFilter" class="com.allcam.filter.ManagerAuthenticationFilter">
		<property name="loginUrl" value="/login_timeout" />
	</bean>  
	
	<!-- /index=authc /user/**=userAuthenticationFilter,roles[outsideuser] -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login_timeout" />
		<property name="successUrl" value="/gohome" />
		<property name="unauthorizedUrl" value="/unauthorizedUrl" />
		<!-- <property name="filters"> <map> <entry key="managerAuthenticationFilter" value-ref="managerAuthenticationFilter" /> <entry key="enterpriseAuthenticationFilter" 
			value-ref="enterpriseAuthenticationFilter" /> <entry key="personalAuthenticationFilter" value-ref="personalAuthenticationFilter" /> </map> </property> -->
		<property name="filters">
			<map>
				<entry key="managerAuthenticationFilter" value-ref="managerAuthenticationFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login*=anon
				<!-- /logout=logout -->
				/resources/** = anon
                /assets/** = anon
                /css/** = anon
                /js/** = anon
                /services/*=anon
				/app/login*=anon
			</value>
		</property>
	</bean>
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- <bean id="secureRemoteInvocationExecutor" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor"> <property name="securityManager" 
		ref="securityManager" /> </bean> <bean id="secureRemoteInvocationFactory" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationFactory" /> -->
</beans>